alias git=hub


#I fucking love sprunge
alias sprunge="curl -F 'sprunge=<-' http://sprunge.us"

export HOST=""
#os specific editor setup
#and give ls colors
if [ `uname` == "Darwin" ]
then
    alias ls="/bin/ls -G"
    export PATH=$PATH:/usr/texbin
    export EDITOR="vim"
else
    export EDITOR="vim"
    alias ls="/bin/ls --color"
fi

tty | grep -i "pts"
if [ $? == 0 ]
then
    export HOST="$(hostname | sed 's/\..*//g') "
fi
# Don’t clear the screen after quitting a manual page
export MANPAGER="less -X"

#can type sqlite, not sqlite3
alias sqlite=sqlite3

# Larger bash history (allow 32³ entries; default is 500)
export HISTSIZE=30000
export HISTFILESIZE=$HISTSIZE

#git in ps1 hacks
parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}

dotfiles_dirty() {
    builtin cd ~/.dotfiles
    if [[ $(git diff --shortstat 2> /dev/null | tail -n1) != "" ]]
    then
        echo "!! DOTFILES ARE DIRTY PLEASE CLEAN !! "
    else
        echo ""
    fi
}

export PS1='$(dotfiles_dirty)$HOST$(parse_git_branch " [%s]  ")\$ '

source ~/.git_completion

export PATH=/usr/local/share/python:$HOME/.cargo/bin:$PATH


#brew bash completion
if which brew > /dev/null
then
    if [ -f `brew --prefix`/etc/bash_completion ]; then
        . `brew --prefix`/etc/bash_completion
    fi
fi

alias serve="python -m SimpleHTTPServer"

export WOLFRAM_APPID="8PUKL9-5W7Y9953W2"

function g {
if [[ $# > 0 ]]
then
    git $@
else
    git status
fi
}

function cd()
{
    builtin cd "$*" && ls
}

alias gp='git push'
alias gcm="git commit -m"
alias retag='`brew --prefix`/bin/ctags -R --exclude=.svn --exclude=.git --exclude=log --exclude=tmp *'
alias review="git push origin HEAD:refs/for/master"
alias c="git commit"
alias typeless='history | tail -n 20000 | sed "s/.*  //"  | sort | uniq -c | sort -g | tail -n 100'
alias be="bundle exec"
alias gau="git add -u"
alias gca="git commit --amend"
alias gcf="git commit --fixup HEAD"
bind -x '"\C-l": clear; ls'
alias t="bundle exec rspec && bundle exec cucumber"
alias ber="bundle exec rspec"
alias bec="bundle exec cucumber"
alias u="cd .."
alias rc="cd ~/dev/rspec/rspec-dev/repos/rspec-core"
alias rs="cd ~/dev/rspec/rspec-dev/repos/rspec-mocks"
alias re="cd ~/dev/rspec/rspec-dev/repos/rspec-expectations"
alias rss="cd ~/dev/rspec/rspec-dev/repos/rspec-support"
alias rr="cd ~/dev/rspec/rspec-dev/repos/rspec-rails"
alias rd="cd ~/dev/rspec/rspec-dev/repos/rspec-dev"
alias e="vim ."
alias srreview="git push gerrit HEAD:refs/for/master"
alias fs="foreman start"
alias ss="./script/server"
alias fu="docker-compose kill && docker-compose up"

alias librato_curl="curl -u samphippen@googlemail.com:0821f2d6a74375fa8e04b20a88b527e4577c4eca556fbba8dfc4dcd4d49e5606"

export ECHO_NEST_API_KEY=NODV0LSHAP8SI9WAF
export GRACENOTE_KEY=4833280-0C9196934FCD54453CE103F96064FD50
export MUSICMETRIC_API_KEY=2a4277ac1ae94261aabce70284506e1f
export SONGKICK_API_KEY=FEXq3znxXVczEfx7
export FLICKR_API_KEY=094749539632747531e59de509dd8dc6
export GOPATH="$HOME/dev/do/go"

export PATH="$PATH:$GOPATH/bin"

gg_replace() {
    if [[ "$#" == "0" ]]; then
        echo 'Usage:'
        echo '  gg_replace term replacement file_mask'
        echo
        echo 'Example:'
        echo '  gg_replace cappuchino cappuccino *.html'
        echo
    else
        find=$1; shift
        replace=$1; shift

        ORIG_GLOBIGNORE=$GLOBIGNORE
        GLOBIGNORE=*.*

        if [[ "$#" = "0" ]]; then
            set -- ' ' $@
        fi

        while [[ "$#" -gt "0" ]]; do
            for file in `git grep -l $find -- $1`; do
                sed -e "s/$find/$replace/g" -i '' $file
            done
            shift
        done

        GLOBIGNORE=$ORIG_GLOBIGNORE
    fi
}

gg_dasherize() {
    gg_replace $1 `echo $1 | sed -e 's/_/-/g'` $2
}

docker_nuke() {
    docker stop $(docker ps -a -q)
    docker rm -f $(docker ps -a -q)
    docker rmi -f $(docker images -q)
}

docker_stop() {
    docker stop $(docker ps -a -q)
    docker rm -f $(docker ps -a -q)
}

alias sprungepaste="pbpaste | sprunge | pbcopy"
alias st='./script/test'
alias sd='./script/dbshell'
alias rl='bundle exec rubocop lib'
export PATH=/Users/sam/Downloads/adt-bundle-mac-x86_64-20140624/sdk/platform-tools:/Users/sam/Downloads/adt-bundle-mac-x86_64-20140624/sdk/tools:/Applications/Postgres.app/Contents/Versions/latest/bin:$HOME/bin:/usr/local/bin:/usr/local/share/npm/bin:$HOME/.sr/tools/bin:$HOME/.cabal/bin:$PATH
source /usr/local/Cellar/chruby/0.3.9/share/chruby/chruby.sh
chruby 2.7
export NODE_PATH=$(npm root -g)
alias stripcolors="perl -pe 's/\e\[?.*?[\@-~]//g'"
alias dbundle='ruby -I ~/dev/bundler/lib ~/dev/bundler/exe/bundle'
alias fig='docker-compose'
export GO15VENDOREXPERIMENT=1

projswitch() {
    BASE=$2
    if [ -z "$3" ]
    then
        clear
        builtin cd $BASE && builtin cd $(find . -type d -maxdepth $1 | grep -v "\.git" | selecta)
        cd .
        clear
        clear
        ls
    else
        builtin cd $BASE/$3
    fi
}

dop() {
    projswitch 2 "$HOME/dev/do/" $1
}

ctp() {
    cd ~/dev/do/cthulhu
    source .env.sh
    projswitch 7 "$HOME/dev/do/cthulhu" $1
}

p() {
    projswitch 2 "$HOME/dev/" $1
}

eval "$(direnv hook bash)"
alias prod_atlantis="ssh sphippen@prod-atlantis05.nyc2.internal.digitalocean.com"
alias berc="bundle exec rubocop -a"
export GOBIN=$HOME/dev/do/cthulhu/docode/bin
alias ca=$HOME/dev/do/cthulhu/script/analyze
export DATABASE_READ_WRITE_HOST=127.0.0.1
export DATABASE_ALPHA_READ_WRITE_HOST=127.0.0.1
export ALPHA_DATABASE_RW_HOST=127.0.0.1
export ALPHA_DATABASE_RO_HOST=127.0.0.1
export BILLING_DATABASE_RW_HOST=127.0.0.1
export FINANCE_DATABASE_RW_HOST=127.0.0.1
export DATABASE_HOST=127.0.0.1

alias rr="ruby -e \"require 'ripper'; require 'pp'; pp Ripper.sexp(ARGV[0])\""

export PATH="$HOME/.cargo/bin:$PATH"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/penelope/Downloads/google-cloud-sdk/path.bash.inc' ]; then . '/Users/penelope/Downloads/google-cloud-sdk/path.bash.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/penelope/Downloads/google-cloud-sdk/completion.bash.inc' ]; then . '/Users/penelope/Downloads/google-cloud-sdk/completion.bash.inc'; fi
export BASH_SILENCE_DEPRECATION_WARNING=1
alias tf='make release && RUBYFMT_USE_RELEASE=1 ./script/tests/test_fixtures.sh'
